#Uppgift 1


# #Acceleration i x-led
# def X_tt(t):
#     c=0.001
#     a=0.020
#     return -c*X_t + a*np.sin(t)


# #Acceleration i y-led
# def Y_tt(g, t):
#     c=0.001
#     return -c*Y_t - g


# #Analytiska lösningen i x-led (position)
# def xt(vx, t):
#     c=0.001
#     a=0.020
#     return ((-c**2 * vx-a-vx) * np.exp(-c*t)-np.cos(t)*a*c**2 -a*c* \
#             np.sin(t)+(c**2+1)*(a+vx)) / ((c**2+1)*c)


# #Analytiska lösningen i y-led (höjd)
# def yt(vy, g, t):
#     c=0.001
#     return ((-vy * c - g) * np.exp(-c * t) + (-g * t + vy) * c + g) /(c**2)


# #Konvergensen
# def q(eN1, eN2, k1, k2):
#     return (np.log10(np.abs(eN1)/np.abs(eN2))) / (np.log10(k1/k2))


# #
# def eN(vx, vy, g, t, xapprox, yapprox):
#     c=0.001
#     a=0.020
#     return (np.abs(xt(vx, t)-xapprox), np.abs(yt(vy, g, t)-yapprox))


# #Tidsstegen
# k = [1, 0.5, 0.25, 0.125]



# v0 = 40 
# θ = 40
# T = 4
# N = []
# for i in k:
#     N.append(T/i)
